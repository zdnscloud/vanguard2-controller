// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rrset.proto

package client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RRType int32

const (
	RRType_A     RRType = 0
	RRType_AAAA  RRType = 1
	RRType_NS    RRType = 2
	RRType_SOA   RRType = 3
	RRType_CNAME RRType = 4
	RRType_MX    RRType = 5
	RRType_TXT   RRType = 6
	RRType_SRV   RRType = 7
	RRType_PTR   RRType = 8
)

var RRType_name = map[int32]string{
	0: "A",
	1: "AAAA",
	2: "NS",
	3: "SOA",
	4: "CNAME",
	5: "MX",
	6: "TXT",
	7: "SRV",
	8: "PTR",
}

var RRType_value = map[string]int32{
	"A":     0,
	"AAAA":  1,
	"NS":    2,
	"SOA":   3,
	"CNAME": 4,
	"MX":    5,
	"TXT":   6,
	"SRV":   7,
	"PTR":   8,
}

func (x RRType) String() string {
	return proto.EnumName(RRType_name, int32(x))
}

func (RRType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6d158749921ab4ba, []int{0}
}

type RRset struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 RRType   `protobuf:"varint,2,opt,name=type,proto3,enum=client.RRType" json:"type,omitempty"`
	Ttl                  uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Rdatas               []string `protobuf:"bytes,4,rep,name=rdatas,proto3" json:"rdatas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RRset) Reset()         { *m = RRset{} }
func (m *RRset) String() string { return proto.CompactTextString(m) }
func (*RRset) ProtoMessage()    {}
func (*RRset) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d158749921ab4ba, []int{0}
}

func (m *RRset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RRset.Unmarshal(m, b)
}
func (m *RRset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RRset.Marshal(b, m, deterministic)
}
func (m *RRset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RRset.Merge(m, src)
}
func (m *RRset) XXX_Size() int {
	return xxx_messageInfo_RRset.Size(m)
}
func (m *RRset) XXX_DiscardUnknown() {
	xxx_messageInfo_RRset.DiscardUnknown(m)
}

var xxx_messageInfo_RRset proto.InternalMessageInfo

func (m *RRset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RRset) GetType() RRType {
	if m != nil {
		return m.Type
	}
	return RRType_A
}

func (m *RRset) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *RRset) GetRdatas() []string {
	if m != nil {
		return m.Rdatas
	}
	return nil
}

type RRsetHeader struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 RRType   `protobuf:"varint,2,opt,name=type,proto3,enum=client.RRType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RRsetHeader) Reset()         { *m = RRsetHeader{} }
func (m *RRsetHeader) String() string { return proto.CompactTextString(m) }
func (*RRsetHeader) ProtoMessage()    {}
func (*RRsetHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d158749921ab4ba, []int{1}
}

func (m *RRsetHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RRsetHeader.Unmarshal(m, b)
}
func (m *RRsetHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RRsetHeader.Marshal(b, m, deterministic)
}
func (m *RRsetHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RRsetHeader.Merge(m, src)
}
func (m *RRsetHeader) XXX_Size() int {
	return xxx_messageInfo_RRsetHeader.Size(m)
}
func (m *RRsetHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RRsetHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RRsetHeader proto.InternalMessageInfo

func (m *RRsetHeader) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RRsetHeader) GetType() RRType {
	if m != nil {
		return m.Type
	}
	return RRType_A
}

func init() {
	proto.RegisterEnum("client.RRType", RRType_name, RRType_value)
	proto.RegisterType((*RRset)(nil), "client.RRset")
	proto.RegisterType((*RRsetHeader)(nil), "client.RRsetHeader")
}

func init() { proto.RegisterFile("rrset.proto", fileDescriptor_6d158749921ab4ba) }

var fileDescriptor_6d158749921ab4ba = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xb1, 0x6a, 0xc3, 0x40,
	0x0c, 0x86, 0x7b, 0xbe, 0xf3, 0x25, 0x56, 0x68, 0x10, 0x1a, 0x8a, 0x47, 0xe3, 0xc9, 0x74, 0xf0,
	0xd0, 0x3e, 0xc1, 0x51, 0x02, 0x5d, 0x92, 0x16, 0xc5, 0x14, 0xaf, 0x6e, 0xa3, 0x21, 0x90, 0x26,
	0xe6, 0xac, 0x25, 0x6f, 0x5f, 0x7c, 0xe9, 0x13, 0x64, 0xfb, 0x7e, 0x3e, 0x89, 0x1f, 0x7e, 0x58,
	0xc5, 0x38, 0x89, 0xb6, 0x63, 0xbc, 0xe8, 0x85, 0xfc, 0xcf, 0xe9, 0x28, 0x67, 0xad, 0x8f, 0x90,
	0x33, 0x4f, 0xa2, 0x44, 0xe0, 0xce, 0xc3, 0xaf, 0x94, 0xa6, 0x32, 0x4d, 0xc1, 0x89, 0xa9, 0x06,
	0xa7, 0xd7, 0x51, 0xca, 0xac, 0x32, 0xcd, 0xfa, 0x65, 0xdd, 0xde, 0x7e, 0x5a, 0xe6, 0xee, 0x3a,
	0x0a, 0x27, 0x47, 0x08, 0x56, 0xf5, 0x54, 0xda, 0xca, 0x34, 0x8f, 0x3c, 0x23, 0x3d, 0x81, 0x8f,
	0x87, 0x41, 0x87, 0xa9, 0x74, 0x95, 0x6d, 0x0a, 0xfe, 0x4f, 0xf5, 0x06, 0x56, 0xa9, 0xea, 0x5d,
	0x86, 0x83, 0xc4, 0x7b, 0x0b, 0x9f, 0x7b, 0xf0, 0xb7, 0x4c, 0x39, 0x98, 0x80, 0x0f, 0xb4, 0x04,
	0x17, 0x42, 0x08, 0x68, 0xc8, 0x43, 0xb6, 0xdb, 0x63, 0x46, 0x0b, 0xb0, 0xfb, 0x8f, 0x80, 0x96,
	0x0a, 0xc8, 0xdf, 0x76, 0x61, 0xbb, 0x41, 0x37, 0xbb, 0x6d, 0x8f, 0xf9, 0xec, 0xba, 0xbe, 0x43,
	0x9f, 0x8e, 0xf8, 0x0b, 0x17, 0x33, 0x7c, 0x76, 0x8c, 0xcb, 0x6f, 0x9f, 0xa6, 0x79, 0xfd, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0xdd, 0xd9, 0xc0, 0x76, 0x29, 0x01, 0x00, 0x00,
}
